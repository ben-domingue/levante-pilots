```{r load-data}
source(here::here("assessment/colombia/stage2/_setup.R"))

trials_coded <- read_rds(here("assessment/colombia/stage2/data_processed/trials_coded.rds"))
participants <- read_rds(here("assessment/colombia/stage2/data_processed/participants.rds"))
```

Data munging

```{r}
# subtask=="number line?"
score_ntl <- function(item, answer, response, threshold = 0.05) {
  max_value <- as.numeric(str_extract(item, "\\d+(?=\\})"))
  abs(as.numeric(response) - as.numeric(answer)) / max_value < threshold
}

mp <- trials_coded |> filter(task_id == "egma-math") |>
  filter(subtask!="number line slider") 

```

## Subtask Accuracy

```{r}
math_ntr <- mp |> group_by(user_id, run_id, age) |>
  summarise(prop_correct = mean(is_correct), n = n()) 

mp |> group_by(user_id, run_id, age, subtask) |>
  summarise(prop_correct = mean(is_correct), n = n()) |>
  ggplot(aes(x=age, y=prop_correct)) +
    facet_wrap(. ~ subtask) + 
    geom_point(aes(size=n), alpha=.5) + 
  geom_smooth(method = "lm")
```

## IRT Models

```{r}
math_wide <- mp |>
  mutate(is_correct = as.numeric(is_correct),
         item_id = paste(subtask, item, sep='-')) |>
  group_by(user_id, item) |>
  slice(1) |> # some kids have >1 admin??
  select(user_id, item, is_correct) |>
  pivot_wider(names_from = "item", values_from = "is_correct") |>
  ungroup()

math_mat <- as.matrix(select(math_wide, -user_id))
rownames(math_mat) <- math_wide$user_id

# remove columns with no variance
math_cols <- colMeans(math_mat, na.rm=TRUE) 
math_mat <- math_mat[,math_cols > 0 & math_cols < 1]
```

```{r fit-rasch-model}
set.seed(1234)

fit_mirt_math <- function(data_mat, item_type) {
  mod <- mirt(data_mat, itemtype = item_type, verbose = TRUE, guess = .25,
              technical = list(NCYCLES = 1000))
  
  mod_coefs <- coef(mod, simplify = TRUE)$items |> as_tibble(rownames = "item")
  
  scores <- fscores(mod, method = "MAP", verbose = FALSE)
  mod_fscores <- tibble(user_id = rownames(data_mat), ability = scores[,1])
  
  list(model = mod, coefs = mod_coefs, fscores = mod_fscores)
}

math_1pl <- fit_mirt_math(math_mat, "Rasch")
write_rds(math_1pl, here("assessment/colombia/stage2/task_analyses/egma/fits/math_1pl.rds"))

math_2pl <- fit_mirt_math(math_mat, "2PL")
write_rds(math_2pl, here("assessment/colombia/stage2/task_analyses/egma/fits/math_2pl.rds"))
```

```{r}
anova(math_1pl$model, math_2pl$model)
math_best <- math_2pl
```

2PL wins - what about multidimensionality?

```{r}
mod2 <- mirt(data = math_mat, model = 2, verbose=TRUE,
             guess = .25, technical = list(NCYCLES = 2000)) # itemtype='2PL',

mod3 <- mirt(data = math_mat, model = 3, verbose=TRUE,
             guess = .25, technical = list(NCYCLES = 2000))

anova(math_best$model, mod2) # 2d preferred by AIC, but not BIC
anova(mod2, mod3) # 3d preferred by AIC, but not BIC
```

## Plot Coefficients

```{r}
coefs_2pl <- math_best$coefs |>
  left_join(mp |> select(item, subtask, expected_answer) |> distinct()) 

ggplot(coefs_2pl, 
       aes(x = a1, y = d, col = subtask)) + # labels = expected_answer
  geom_jitter(alpha = .5, width = .5) + 
  geom_smooth(method = "lm")+ 
  facet_wrap(~subtask, scales="free")
```

```{r}
math_ntr <- math_ntr |>
  left_join(math_best$fscores)
GGally::ggpairs(ungroup(math_ntr) |> select(-user_id, -run_id), mapping=aes(alpha=.3))
# ggsave("plots/age_n_acc_ability.png", width=9, height=9)
```

Save parameters

```{r}
math_scores <- math_best$fscores |>
  rename(score = ability) |>
  mutate(task = "egma-math", score_type = "ability (2PL)")

write_rds(math_scores, here("assessment/colombia/stage2/scores/math_scores.rds"))
```

## Number line comparison

```{r, eval=F}
# 38 unique values in distract_options, but 2 of them are {} and NA 
# should be 36 number line problems
# distract_options defined for 4AFC; slider trials are {} or NA (only on/before May 24)
# note: rt is NA on the 4AFC trials, but saved on slider trials
nl <- trials_coded |> filter(task_id == "egma-math") |>
  filter(subtask=="number line slider" | subtask=="number line 4afc")

table(nl$user_id, nl$subtask)

# 4afc and slider trials are correctly categorized; we have so many more slider trials because there was no way to fail out (since is_correct wasn't coded) -- so a lot of kids did fail out of 4afc early on, but had to do all slider trials

# has 72 number line slider trials..
user_id=="6rEqftuHBnhlGRZ7dKIlDqjnM6a2"
#filter(user_id!="6rEqftuHBnhlGRZ7dKIlDqjnM6a2" & user_id!="7IoWgqOQzdhiQBkbCn4OAqLnc4G3") |>

trials_nl <- trials_coded |>
  filter(str_detect(subtask, "line")) |> # 18398
  distinct(user_id, subtask, item, expected_answer, response, time_elapsed) |> # item-level data are duplicated (for all users?)
  #slice(1) |> 
  #ungroup() |> # 13344
  mutate(is_correct = score_ntl(item, expected_answer, response, threshold=.1)) |>
  mutate(expected_answer = as.numeric(expected_answer),
         response = as.numeric(response)) |>
  select(subtask, item, expected_answer, user_id, response) |>
  mutate(subtask = fct_recode(subtask, "ntl" = "number line slider", "ltn" = "number line 4afc")) |>
  pivot_wider(names_from = subtask, values_from = response) |>
  mutate(correct_ltn = expected_answer == ltn,
         correct_ntl_10 = score_ntl(item, expected_answer, ntl, 0.1)) |>
  select(-ltn, -ntl) |>
  pivot_longer(cols = contains("correct"), names_to = "metric", values_to = "correct")

table(trials_nl$user_id, trials_nl$subtask)

line_summary <- trials_nl |>
  mutate(metric = metric |>
           fct_recode("line-to-number" = "correct_ltn",
                      "number-to-line" = "correct_ntl_10") |>
           fct_inorder()) |>
  group_by(item, expected_answer, metric) |>
  summarise(subjects = n_distinct(pid),
            trials = n(),
            num_correct = sum(correct, na.rm = TRUE),
            prop_correct = num_correct / trials) |>
  ungroup() |>
  arrange(metric, prop_correct) |>
  mutate(item_label = paste(str_replace(item, "'0': (\\d+), '1': (\\d+)", "\\1-\\2"), expected_answer),
         item_label = fct_inorder(item_label),
         item_index = factor(row_number()))
         # item_index = paste(metric, item_label) |> fct_inorder())

ggplot(line_summary, aes(x = prop_correct, y = item_index)) +
  facet_wrap(vars(metric), scales = "free_y", nrow = 1) +
  # geom_hline(aes(yintercept = item_label), color = "lightgrey") +
  geom_point() +
  # scale_x_continuous(breaks = round(unique(ltn$prop_correct), 2)) +
  scale_y_discrete(breaks = line_summary$item_index, labels = line_summary$item_label) +
  labs(x = "Proportion correct responses", y = "Item") +
  theme(panel.grid.major.y = element_line(colour = "lightgrey", linewidth = 0.2))
ggsave("plots/line_items.png", width = 12, height = 5)

line_summary |>
  select(item_label, metric, prop_correct) |>
  pivot_wider(names_from = metric, values_from = prop_correct) |>
  pivot_longer(contains("number-"), names_to = "metric", values_to = "correct") |>
  mutate(metric = paste("Percent correct in", metric) |> fct_inorder()) |>
  ggplot(aes(x = `line-to-number`, y = correct)) +
    facet_wrap(vars(metric), switch = TRUE) +
    geom_point() +
    geom_smooth(method = "lm") +
    labs(x = "Percent correct in line-to-number") +
    theme(strip.placement = "outside",
          axis.title.y = element_blank())
ggsave("plots/line_items_corrs.png", width = 10, height = 4)

# mutate(task = ifelse(trial_index>=461, "number-to-line", task)) |>

```
