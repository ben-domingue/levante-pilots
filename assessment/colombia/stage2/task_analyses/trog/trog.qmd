---
title: "Syntax (TROG)"
format: html
editor: visual
---

```{r load-data}
library(mirt)
require(tidyverse)

source(here::here("assessment","colombia","stage2","_setup.R"))

trials_coded <- read_rds(here("assessment", "colombia", "stage2", "data_processed", "trials_coded.rds"))
participants <- read_rds(here("assessment", "colombia", "stage2", "data_processed", "participants.rds"))
```

```{r}
mr <- trials_coded |> filter(task_id == "trog") |>
  distinct(user_id, run_id, age, item, rt, is_correct)
```

```{r}
ntr <- mr |> 
  group_by(user_id, run_id, age) |>
  summarise(prop_correct =  mean(is_correct), 
            n = n(),
            meanRT = mean(rt))

task_duration = summary(with(ntr, n * meanRT) / 1000 / 60) # ~5-7mins
```

```{r}
ggplot(ntr, aes(x = n)) + 
  geom_histogram(bins = 10)
```

```{r}
ntr |> 
  ggplot(aes(x = n, y = prop_correct)) +   
  geom_point() + geom_smooth(method = "lm") + theme_bw()
```

## IRT Models

Items removed due to 100% accuracy:

```{r}
mr_wide <- mr |>
  mutate(is_correct = as.numeric(is_correct)) |>
  group_by(user_id, item) |>
  slice(1) |> # duplicates??
  select(user_id, item, is_correct) |>
  pivot_wider(names_from = "item", values_from = "is_correct") |>
  ungroup()

mr_mat <- as.matrix(select(mr_wide, -user_id))
rownames(mr_mat) <- mr_wide$user_id

# remove columns with no variance
mr_cols <- colMeans(mr_mat, na.rm=TRUE) 

mr_mat <- mr_mat[,mr_cols > 0 & mr_cols < 1] # 7/97 removed due to all correct

names(mr_cols)[which(mr_cols==1)]
```

### Fit models

```{r fit-rasch-model}
set.seed(1234)

mod_1pl <- mirt(mr_mat, 1, itemtype = "Rasch", 
                verbose = TRUE, 
                guess = .25,
                technical = list(NCYCLES = 1000))

coefs_1pl <- as_tibble(coef(mod_1pl, simplify = TRUE)$items) |>
  mutate(item = rownames(coef(mod_1pl, simplify = TRUE)$items))
fscores_1pl <- tibble(data_id = rownames(mr_mat),
                      ability = fscores(mod_1pl, method = "MAP")[,1])

save(file="mod_1pl.rds", 
     "mod_1pl", "fscores_1pl", "coefs_1pl")
```

```{r fit-2pl}
mod_2pl <- mirt(mr_mat, 1, itemtype='2PL', verbose=TRUE, 
                guess = .25, 
                technical = list(NCYCLES = 1000))

coefs_2pl <- as_tibble(coef(mod_2pl, simplify = TRUE)$items) %>%
 mutate(item = rownames(coef(mod_2pl, simplify = TRUE)$items))
fscores_2pl <- tibble(data_id = rownames(mr_mat),
 ability = fscores(mod_2pl, method = "MAP")[,1])

save(file="mod_2pl.rds", 
     "mod_2pl", "fscores_2pl", "coefs_2pl")
```

Rasch wins.

```{r}
anova(mod_1pl, mod_2pl)
```

### Coefficients

```{r, fig.height=12}
ggplot(coefs_1pl, 
       aes(x = reorder(item, -d), y = d)) + 
  geom_jitter(alpha = .5, width = .5) + 
  geom_smooth(method = "lm") + theme_bw() +
  theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1)) + 
  coord_flip()
```

## Item fits

```{r}
#itfit <- itemfit(mod_1pl, fit_stats = c("PV_Q1*"), return.tables=F) # "PV_Q1*"
```

```{r}
ntr <- ntr |> left_join(fscores_1pl, by = c("user_id" = "data_id"))
GGally::ggpairs(ungroup(ntr) |> select(-user_id, -run_id, -meanRT))
```

```{r}
ntr |> 
  ggplot(aes(x = prop_correct, y = ability, color=age)) + 
    geom_point(aes(size = n), alpha = .4) +
  geom_smooth(method = "lm") + theme_bw()
```

Write out parameters

```{r}
syntax_params <- ntr |>
  select(user_id, ability, age) |>
  rename(syntax_theta = ability) |>
  mutate(syntax_model = "rasch")

save(file = here::here("assessment","colombia","stage2",
                       "data_processed", "math_params.Rds"), 
     syntax_params)

```
