---
format: html
---
  
```{r setup}
source("_setup.R")
source("_data_loading_functions.R")
```

```{r datasets}
dataset_names <- c("columbia_pilot_0523_0529:f068:v2_1",
                   "columbia_pilot_0523_0530_users_collection:fa9g:v2_1",
                   "columbia_pilot_0604_0607:bvmr:v3_0",
                   "columbia-pilot-Bund-ColA-ColC-ColD-V2-ColB") 

dataset_tables <- get_datasets(dataset_names)
# duplicates across datasets..should uniquify
intersect(dataset_tables[[2]]$users$user_id, 
          dataset_tables[[4]]$users$user_id) # 254
intersect(dataset_tables[[3]]$users$user_id, 
          dataset_tables[[4]]$users$user_id) # 570


dataset_data <- combine_datasets(dataset_tables)
# sort(unique(dataset_data$users$birth_year))
invalid_birth_years = c(1, 1933, 1934, 2104, 2024, 10000) # CO plans to get the correct years later
dataset_data$users <- dataset_data$users |> 
  mutate(birth_year = ifelse(is.element(birth_year, invalid_birth_years), NA, birth_year))

quality_control <- function() {
  length(unique(dataset_data$users$user_id)) # 12171 rows, 11340 unique user_ids
  unique(dataset_data$users$assessment_pid) # 134, e.g. colombia-101 - colombia-170
  dataset_data$users |> 
    filter(is.element(birth_year, invalid_birth_years)) |>
    select(user_id, assessment_pid, parent_id, teacher_id, birth_month, birth_year) |>
    # left_join(dataset_data$user_groups) |> # many-to-many, but may be hard to look up without group
  write_csv(here("CO_birth_dates_to_update.csv"))
}
```

```{r participants}
users <- collect_users(dataset_data)

# get colombia participants and calculate their ages
participants <- users |>
  filter(user_type %in% c("guest", "student")) |>
  filter(is.na(name) | str_detect(name, "PilotoColombia|PilotoCOLOMBIA")) |>
  select(user_id, assessment_pid, birth_month, birth_year, group_name = name) |>
  distinct() |>
  mutate(dob = ym(paste(birth_year, birth_month, sep = "-")),
         age = as.numeric(difftime(today(), dob, units = "days")) / 365.25)

# Age distribution:
table(round(participants$age))[1:9] # 2080 (!)
```

```{r trials}
trials <- dataset_data$trials

# add participant info to trials
trials_ids <- trials |> inner_join(participants)

# code and remove practice trials
trials_filtered <- trials_ids |>
  mutate(practice = !is.na(is_practice) & is_practice |
           assessment_stage == "practice_response") |>
  filter(!practice) |>
  select(-practice, -is_practice)

# code info on tasks, subtasks, task groups
roar_tasks <- c("letter", "pa", "pa-es", "sre", "sre-es", "swr", "swr-es", "vocab")
trials_tasks <- trials_filtered |>
  filter(!(task_id %in% c("pa", "sre", "swr"))) |>
  mutate(task_group = case_when(
    task_id %in% roar_tasks ~ "ROAR",
    str_detect(task_id, "egma") ~ "EGMA",
    task_id == "hearts-and-flowers" ~ "H&F",
    task_id == "theory-of-mind" ~ "ToM",
    TRUE ~ task_id
  )) |>
  mutate(corpus_trial_type = if_else(
    task_group == "EGMA" & is.na(corpus_trial_type) & !is.na(item),
    if_else(is.na(distract_options) | distract_options == "{}", "number line slider", "number line 4afc"),
    corpus_trial_type),
         corpus_trial_type = str_to_lower(corpus_trial_type)) |>
  mutate(subtask = case_when(
    task_group %in% c("EGMA", "mental-rotation") ~ corpus_trial_type,
    task_group == "ROAR" ~ task_id,
    str_detect(task_id, "hearts|theory") ~ str_remove_all(assessment_stage, " stimulus"))) |>
  mutate(task = if_else(is.na(subtask), task_id, glue("{task_group} ({subtask})")))

# order tasks approximately by presentation order
trials_tasks_ordered <- trials_tasks |>
  add_count(user_id, run_id, name = "run_trials") |>
  arrange(desc(run_trials), server_timestamp) |>
  mutate(task_group = fct_inorder(task_group),
         task = fct_inorder(task))

# filter out trials missing both item and response
# recode correctness for some tasks
trials_coded <- trials_tasks_ordered |>
  filter(!is.na(item) | !is.na(expected_answer) | !is.na(response)) |>
  mutate(is_correct = is_correct |
           str_detect(task, "hostile") & !str_detect(response, "accident"))

write_rds(trials_coded, "data_processed/trials_coded.rds")
write_rds(participants, "data_processed/participants.rds")
```
