---
format: html
---
  
```{r setup}
library(ltm)
library(googlesheets4)

source(here::here("assessment/colombia/stage2/_setup.R"))
source(here::here("assessment/colombia/stage2/_data_loading_functions.R"))
```

```{r datasets}
dataset_names <- c("columbia-pilot-0528-0618")
dataset_tables <- get_datasets(dataset_names,
                               tables = c("survey_responses", "users", "user_groups", "groups"))
dataset_data <- combine_datasets(dataset_tables)
```

```{r participants}
users <- collect_users(dataset_data)

# check that birth years are valid, construct pseudo DOBs
participants <- users |>
  filter(user_type == "student") |>
  mutate(birth_month = as.numeric(birth_month),
         birth_year = as.numeric(birth_year),
         birth_year_original = birth_year,
         valid_birth_year = !is.na(birth_year) & birth_year > 2005 & birth_year < 2023,
         birth_year = if_else(valid_birth_year, birth_year, NA),
         last_updated = as_datetime(last_updated)) |>
  select(user_id, assessment_pid, birth_month, birth_year,
         birth_year_original, valid_birth_year, last_updated) |>
  distinct() |>
  mutate(dob = ym(paste(birth_year, birth_month, sep = "-")))
```

```{r}
survey_responses <- dataset_data$survey_responses

# join in participants and compute ages
survey_age <- participants |>
  filter(valid_birth_year) |>
  select(user_id, dob) |>
  right_join(survey_responses) |>
  mutate(age = as.numeric(difftime(created_at, dob, units = "days")) / 365.25, .after = dob) |>
  filter(!is.na(age)) |>
  select(-dob, -created_at)

# get item metadata from google sheet
form <- read_sheet("1CthXFU6ZWCa0_BSIx2_HKobGM6WKRl6XG6UI8adOuv8",
                   sheet = "Child Forms", na = c("", "NA"))

form_variables <- form |>
  filter(!is.na(variable_name)) |>
  mutate(form_construct = fct_inorder(form_construct),
         variable_order = 1:n(),
         values = response_options |> str_split(", ") |> map(as.numeric)) |>
  select(variable_name, variable_order, form_construct, reverse_coded, values)

# join in item metadata to survey data, filter/sort variables
survey_vars <- survey_age |>
  mutate(across(-c(user_id, age, survey_response_id), as.numeric)) |>
  pivot_longer(cols = -c(user_id, age, survey_response_id),
               names_to = "variable", values_to = "value") |>
  # variable_name = VariableName
  mutate(variable_name = variable |> str_replace_all("_", " ") |> str_to_title() |> str_remove_all(" ")) |>
  filter(!str_detect(variable, "example")) |>
  left_join(form_variables) |>
  arrange(variable_order) |>
  mutate(variable = fct_inorder(variable)) |>
  select(-variable_name, -variable_order)

# reverse code values if needed
reverse_value <- \(v, vals) if (any(is.na(vals)) || !(v %in% vals)) NA else rev(vals)[which(vals == v)]
survey_data <- survey_vars |>
  mutate(value = if_else(reverse_coded, map2_dbl(value, values, reverse_value), value)) |>
  select(-reverse_coded, -values) |>
  filter(!is.na(value))

# write_rds(survey_data, "data/child_survey_data.rds")

ggplot(survey_data, aes(x = value, y = variable)) +
  facet_wrap(vars(form_construct), scales = "free") +
  geom_sina(size = 0.5) +
  labs(x = "Response", y = "Item")

ggsave("child_survey_vals.png", width = 11, height = 5)
```

```{r}
item_alphas <- survey_data |>
  group_by(user_id, form_construct, variable) |>
  summarise(value = mean(value)) |>
  ungroup() |>
  nest(data = -form_construct) |>
  mutate(df_vals = map(data, function(df) {
    df |>
      pivot_wider(names_from = variable, values_from = value) |>
      select(-user_id)
  })) |>
  filter(!map_lgl(df_vals, \(dfv) ncol(dfv) == 1)) |>
  mutate(alpha = map(df_vals, \(dfv) cronbach.alpha(dfv, na.rm = TRUE, CI = TRUE) |> unclass() |> as_tibble()))

alphas <- item_alphas |>
  select(form_construct, alpha) |>
  unnest(alpha) |>
  mutate(probs = probs |> as_factor() |> fct_recode(lower = "0.025", upper = "0.975")) |>
  pivot_wider(names_from = probs, values_from = ci, names_prefix = "ci_") |>
  mutate(form_construct = form_construct |> fct_inorder() |> fct_rev())

ggplot(alphas, aes(x = alpha, y = form_construct)) +
  # facet_col(facets = vars(form_construct), scales = "free_y", space = "free") +
  # geom_vline(xintercept = 0, linetype = "dotted") +
  geom_vline(xintercept = .7, colour = "lightgrey") +
  geom_linerange(aes(xmin = ci_lower, xmax = ci_upper), orientation = "y", colour = "grey") +
  geom_crossbar(aes(xmin = alpha, xmax = alpha), orientation = "y") +
  geom_text(aes(label = paste(p, "items")), x = 0.05,
            size = 3, family = .font, hjust = 1) +
  expand_limits(x = 0) +
  labs(x = glue("Cronbach's alpha (N = {unique(alphas$n)})"), y = "Form construct")

ggsave("child_survey_alphas.png", width = 7, height = 3)
```
