---
format: html
---
  
```{r}
library(tidyverse)
library(glue)
library(ggforce)
library(ggthemes)

.font <- "Source Sans Pro"
theme_set(theme_bw(base_size = 12, base_family = .font))
theme_update(panel.grid = element_blank(),
             strip.background = element_blank(),
             legend.key = element_blank(),
             panel.border = element_blank(),
             axis.line = element_line(),
             strip.text = element_text(face = "bold"))
```

```{r}
user <- redivis::user("levante")
dataset <- user$dataset("columbia_pilot:7hfa:v1_0")

runs <- dataset$table("runs")$to_tibble()
trials <- dataset$table("trials")$to_tibble()
users <- dataset$table("users")$to_tibble()

ss_corrections <- "1gJiAVp8H7Ohop-1pbJaxRCiFmMFXt5neqCXfUuDd1Uc"
pid_mappings <- googlesheets4::read_sheet(ss_corrections, "pid_mappings")

ss_subjects <- "11LrCpCoBeu-Ajfu1xuE2nGtn4XA1FimoDvIKCB3KqOE"
subject_meta <- googlesheets4::read_sheet(ss_subjects, "Sheet1")
test_ids <- c("colombia-pilot-000")
```

```{r}
trials |> count(task_id)

# missing is_practice
trials |> filter(is.na(is_practice)) |> count(task_id)

# missing expected_answer
trials |> filter(is.na(expected_answer)) |> count(task_id)

convert_math <- function(r) { # TODO
q}

trials_coded <- trials |>
  filter(is.na(is_practice) | !is_practice) |> #!is.na(expected_answer)) |>
  # mutate(response = convert_math(response)) |>
  mutate(correct = response == expected_answer,
         rt = as.numeric(rt)) |>
  filter(!(task_id %in% c("hearts-and-flowers", "memory-game", "pa", "sre", "swr"))) |>
  # filter(trial_index != 5) |>
  mutate(subtask = case_when(
    task_id != "egma-math" ~ NA,
    str_detect(item, "-") ~ "subtraction",
    str_detect(item, "_") ~ "sequence",
    str_detect(item, "x") ~ "multiplication",
    str_detect(item, "\\+") ~ "addition",
    str_detect(item, "\\{") ~ "line-to-number", 
    str_count(item, ",") == 1 ~ "number comparison",
    trial_index <= 65 ~ "number identification",
    trial_index >= 461 ~ "number-to-line",
    TRUE ~ NA)) |>
  mutate(task = if_else(task_id == "egma-math", glue("egma ({subtask})"), task_id),
         task = if_else(str_detect(task_id, "-es"), glue("roar ({task_id})"), task),
         task_group = str_replace(task, "^(.*)\\s\\(.*\\)", "\\1"))

# r <- trials_coded |> filter(correct != is_correct) |>
#   select(task_id, subtask, item, expected_answer, response, is_correct, correct) |>
#   slice(2) |> pull(response)

# trials_coded |> filter(subtask == "addition") |> distinct(item, expected_answer, response) |> View()
  # select(task_id, subtask, item, expected_answer, response, is_correct, correct)

user_ids <- users |>
  select(user_id, assessment_pid) |>
  left_join(pid_mappings) |>
  mutate(pid = if_else(str_detect(assessment_pid, "colombia"), assessment_pid, correct_pid)) |>
  select(-assessment_pid, -correct_pid, -task) |>
  filter(!is.na(pid), !(pid %in% test_ids)) |>
  full_join(subject_meta)

trials_ids <- trials_coded |>
  left_join(user_ids) |>
  # filter(str_detect(task, "roar")) |> select(pid, user_id)
  mutate(pid = if_else(str_detect(task, "roar"), user_id, pid)) |>
  filter(!is.na(pid))

subjects <- user_ids |> select(-user_id) |> distinct()
  
subject_summary <- trials_ids |>
  # group_by(task_id, pid) |>
  mutate(task = fct_inorder(task)) |>
  group_by(task_group, task, pid) |>
  summarise(trials = n(),
            num_correct = sum(is_correct, na.rm = TRUE),
            prop_correct = mean(is_correct, na.rm = TRUE)) |>
  ungroup() |>
  left_join(subjects) |>
  group_by(task) |>
  mutate(task_label = glue("{task}\n(n = {n()})"),
         prop_trials = trials / max(trials)) |>
  ungroup() |>
  mutate(task_label = fct_inorder(task_label))

subject_summary |> count(task)
subject_summary |> count(task_group)

# floor/ceiling effects
subject_summary |>
  filter(prop_correct == 0 | prop_correct == 1)
```

```{r}
ggplot(subject_summary, aes(x = "", y = prop_correct)) +
  facet_wrap(vars(task_label), nrow = 2) +
  geom_sina(aes(colour = task_group), alpha = 0.8) +
  scale_colour_ptol() +
  labs(y = "Subject's proportion of correct responses") +
  guides(colour = "none") +
  theme(axis.ticks.x = element_blank(),
        axis.title.x = element_blank(),
        strip.text = element_text(size = 8))
ggsave("plots/subject_correct.png", width = 12, height = 5)

ggplot(subject_summary, aes(x = "", y = prop_trials)) +
  facet_wrap(vars(task_label), nrow = 2) +
  geom_sina(aes(colour = task_group)) +
  scale_colour_ptol() +
  labs(y = "Subject's proportion of correct responses") +
  guides(colour = "none") +
  theme(axis.ticks.x = element_blank(),
        axis.title.x = element_blank(),
        strip.text = element_text(size = 8))
ggsave("plots/subject_completed.png", width = 12, height = 5)

ggplot(subject_summary, aes(x = age, y = prop_correct)) +
  facet_wrap(vars(task_label), nrow = 2) +
  geom_smooth(method = "lm", colour = "darkgrey") +
  geom_point(aes(size = trials, colour = task_group), alpha = 0.8) +
  scale_colour_ptol() +
  labs(x = "Age (years)", y = "Subject's proportion correct responses",
       size = "Number of trials completed") +
  guides(colour = "none") +
  theme(legend.position = "bottom",
        strip.text = element_text(size = 8))
ggsave("plots/subject_correct_age.png", width = 12, height = 5.5)

ggplot(subject_summary, aes(x = age, y = prop_trials)) +
  facet_wrap(vars(task_label), nrow = 2) +
  geom_smooth(method = "lm", colour = "darkgrey") +
  geom_point(aes(size = trials, colour = task_group), alpha = 0.8) +
  scale_colour_ptol() +
  labs(x = "Age (years)", y = "Subject's proportion trials completed",
       size = "Number of trials completed") +
  guides(colour = "none") +
  theme(legend.position = "bottom",
        strip.text = element_text(size = 8))
ggsave("plots/subject_completed_age.png", width = 12, height = 5.5)
```

```{r}
time_summary <- trials_ids |>
  filter(!is.na(pid)) |>
  mutate(task = fct_inorder(task)) |>
  arrange(task, run_id, user_id, trial_index) |>
  mutate(server_timestamp = as_datetime(server_timestamp)) |>
  group_by(task_group, task, run_id, user_id, pid) |>
  summarise(trials = n(),
            start = min(server_timestamp), end = max(server_timestamp)) |>
  mutate(diff = difftime(end, start, units = "mins")) |>
  group_by(task) |>
  mutate(task_label = glue("{task}\n(n = {n()})")) |>
  ungroup() |>
  mutate(task_label = fct_inorder(task_label)) |>
  left_join(subjects)

time_summary |> count(task)
time_summary |> count(task, pid) |> filter(n == max(n))

ggplot(time_summary, aes(x = "", y = diff, colour = task_label)) +
  facet_wrap(vars(task_label), nrow = 2) +
  geom_sina(aes(colour = task_group)) +
  scale_colour_ptol() +
  labs(y = "Duration (minutes)") +
  guides(colour = "none") +
  theme(axis.ticks.x = element_blank(),
        axis.title.x = element_blank(),
        strip.text = element_text(size = 8))
ggsave("plots/durations.png", width = 12, height = 5)

ggplot(time_summary, aes(x = age, y = diff)) +
  facet_wrap(vars(task_label), nrow = 2) +
  geom_smooth(method = "lm", colour = "darkgrey") +
  geom_point(aes(colour = task_group), alpha = 0.8) +
  scale_colour_ptol() +
  labs(x = "Age (years)", y = "Duration (minutes)") +
  guides(colour = "none") +
  theme(legend.position = "bottom",
        strip.text = element_text(size = 8))
ggsave("plots/durations_age.png", width = 12, height = 5.5)
```

```{r}
mr <- trials_ids |>
  filter(task_id == "mental-rotation") |>
  select(pid, item, response, correct, rt) |>
  mutate(stim_type = if_else(str_count(item) == 5, "2d", "3d"),
         stim_set = str_sub(item, 1, 1) |> fct_recode("ghost" = "g", "rabbit" = "r", "goat" = "t", "duck" = "d"),
         stim_set = if_else(stim_type == "2d", glue("2d ({stim_set})"), "3d"),
         angle = item |> str_sub(-3) |> as.numeric(),
         angle = if_else(angle > 180, 360 - angle, angle),
         .after = item) |>
  mutate(rt = rt / 1000)

# mr |> distinct(stim_type, stim_set, angle, item) |> count(stim_type, stim_set, angle)

mr_subject_type <- mr |>
  group_by(pid, stim_type, angle) |>
  summarise(items = n_distinct(item),
            prop_correct = mean(correct, na.rm = TRUE))

mr_type <- mr_subject_type |>
  group_by(stim_type, angle) |>
  summarise(accuracy = mean(prop_correct),
            sd = sd(prop_correct),
            n = n(),
            se = sd / sqrt(n))

ggplot(mr_subject_type, aes(x = angle, y = prop_correct, colour = stim_type)) +
  facet_grid(cols = vars(stim_type), scales = "free_x", space = "free_x") +
  geom_jitter(alpha = 0.5, size = 0.8) +
  geom_pointrange(aes(y = accuracy, ymin = accuracy - 1.96 * se, ymax = accuracy + 1.96 * se),
                  data = mr_type) +
  geom_line(aes(y = accuracy), data = mr_type) +
  scale_x_continuous(breaks = unique(mr_subject_type$angle)) +
  scale_colour_ptol(guide = "none") +
  labs(x = "Angle", y = "Proportion correct responses", colour = "")
ggsave("plots/mr_accuracy_type.png", width = 6, height = 3.5)

mr_subject_set <- mr |>
  group_by(pid, stim_type, stim_set, angle) |>
  summarise(items = n_distinct(item),
            prop_correct = mean(correct, na.rm = TRUE))

mr_set <- mr_subject_set |>
  group_by(stim_type, stim_set, angle) |>
  summarise(accuracy = mean(prop_correct),
            sd = sd(prop_correct),
            n = n(),
            se = sd / sqrt(n))

ggplot(mr_subject_set, aes(x = angle, y = prop_correct, colour = stim_type)) +
  facet_grid(cols = vars(stim_set), scales = "free_x", space = "free_x") +
  geom_jitter(alpha = 0.5, size = 0.8) +
  geom_pointrange(aes(y = accuracy, ymin = accuracy - 1.96 * se, ymax = accuracy + 1.96 * se),
                  data = mr_set, position = position_dodge(width = 10)) +
  geom_line(aes(y = accuracy), data = mr_set) +
  scale_x_continuous(breaks = unique(mr_subject_set$angle)) +
  scale_colour_ptol(guide = "none") +
  labs(x = "Angle", y = "Proportion correct responses", colour = "")
ggsave("plots/mr_accuracy_set.png", width = 11, height = 3.5)
```

```{r}
mr_subject_type_rt <- mr |>
  group_by(pid, stim_type, angle, correct) |>
  summarise(items = n_distinct(item),
            median_rt = median(rt, na.rm = TRUE)) |>
  mutate(correct = if_else(correct, "corrent", "incorrect"))

mr_type_rt <- mr_subject_type_rt |>
  group_by(stim_type, angle, correct) |>
  summarise(rt = mean(median_rt),
            sd = sd(median_rt),
            n = n(),
            se = sd / sqrt(n))

ggplot(mr_subject_type_rt, aes(x = angle, y = median_rt, colour = stim_type)) +
  facet_grid(cols = vars(stim_type), rows = vars(correct), scales = "free_x", space = "free_x") +
  geom_jitter(alpha = 0.5, size = 0.8) +
  geom_pointrange(aes(y = rt, ymin = rt - 1.96 * se, ymax = rt + 1.96 * se),
                  data = mr_type_rt) +
  geom_line(aes(y = rt), data = mr_type_rt) +
  scale_x_continuous(breaks = unique(mr_subject_type$angle)) +
  scale_colour_ptol(guide = "none") +
  labs(x = "Angle", y = "Response time (seconds)", colour = "")
ggsave("plots/mr_rt_type.png", width = 6, height = 5)

mr_subject_set_rt <- mr |>
  group_by(pid, stim_type, stim_set, angle, correct) |>
  summarise(items = n_distinct(item),
            median_rt = median(rt, na.rm = TRUE)) |>
  mutate(correct = if_else(correct, "corrent", "incorrect"))

mr_set_rt <- mr_subject_set_rt |>
  group_by(stim_type, stim_set, angle, correct) |>
  summarise(rt = mean(median_rt),
            sd = sd(median_rt),
            n = n(),
            se = sd / sqrt(n))

ggplot(mr_subject_set_rt, aes(x = angle, y = median_rt, colour = stim_type)) +
  facet_grid(cols = vars(stim_set), row = vars(correct), scales = "free_x", space = "free_x") +
  geom_jitter(alpha = 0.5, size = 0.8) +
  geom_pointrange(aes(y = rt, ymin = rt - 1.96 * se, ymax = rt + 1.96 * se),
                  data = mr_set_rt) +
  geom_line(aes(y = rt), data = mr_set_rt) +
  scale_x_continuous(breaks = unique(mr_subject_set_rt$angle)) +
  scale_colour_ptol(guide = "none") +
  labs(x = "Angle", y = "Response time (seconds)", colour = "")
ggsave("plots/mr_rt_set.png", width = 10, height = 5)
```

```{r}
matrix <- trials_ids |>
  filter(task_id == "matrix-reasoning") |>
  arrange(pid, trial_index) |>
  select(pid, age, item, correct, rt) |>
  mutate(pid = pid |> fct_inorder() |> as.numeric())

# write_rds(matrix, "data/colombia-matrix-reasoning.rds")
```
